#cloud-config
users:
- name: ubuntu
  lock_passwd: False
  plain_text_passwd: ubuntu
  sudo: ALL=(ALL) NOPASSWD:ALL
  groups: users, admin
  ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCsuCBcxvYSGrHP+1h+qT+W+uuVflgyQlkKmC6fpUoUVYNPRaCfa5GFKUuKJ+uXZw6HUZDEZP3J162hQ/AHlvQVYRCBdpx+DA6fnb2VBnPkObYVqOAW/fFoY3xOUCHDolwm8OscgQOByK3IOWD1BIZiCuYd/Tc/XwQVAHl8sjzcVm1lIhL4qRGeiDGInxcagErzwSsuxTBeuPp9jXhTI/ZU94KOFft7b6+hd7xIL7tsJYD4PJKL/MVGFL/AcJSWTx6/60jeAwdhdxAPhrfK/YL8uCq5zrxqK1QSZzYmfDTegsSP/olL/lqZbZlBqdVf6Pi80v4POXEdE7x6V89tzZawaUDe+CsZ57tRqHVmDcQnKRwsY4w0liiVXWfdRMYshwOpB/VsoXf68xS+ZORk7gLRzUwD/SQfIBbAvipJSSHRC1066BHRTuk8vcSv0d16ZGYq0I9SI3sqVrlDTY9AKJ97fv8ymRlAaiUO8aQtJPHwCnQYD9Sa+nthUxdEnpBc5+0= nmm@localhost.localdomain
write_files:
- path: "/etc/sysctl.d/k8s.conf"
  content: |
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1

- path: "/etc/apt/sources.list.d/docker.list"
  permissions: "0644"
  content: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable

- path: "/etc/apt/sources.list.d/kubernetes.list"
  permissions: "0644"
  content: deb http://apt.kubernetes.io/ kubernetes-xenial main

- path: "/home/ubuntu/bootstrap.sh"
  content: |
    sudo ufw enable
    sudo iptables -A INPUT -p tcp --dport 6443 -j ACCEPT
    sudo iptables -A INPUT -p tcp --dport 10250 -j ACCEPT
    sudo iptables -A INPUT -p tcp --dport 10251 -j ACCEPT
    sudo iptables -A INPUT -p tcp --dport 10252 -j ACCEPT
    sudo iptables -A INPUT -p tcp --dports 2379:2380 -j ACCEPT
    sufo ufw reload

    sudo sysctl --system

    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

    sudo apt-get update
    sudo apt-get install -y \
      containerd.io=1.2.13-2 \
      docker-ce=5:19.03.11~3-0~ubuntu-$(lsb_release -cs) \
      docker-ce-cli=5:19.03.11~3-0~ubuntu-$(lsb_release -cs)

    cat > /etc/docker/daemon.json <<EOF
    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
        "max-size": "100m"
      },
      "storage-driver": "overlay2"
    }
    EOF

    mkdir -p /etc/systemd/system/docker.service.d
    systemctl daemon-reload
    systemctl restart docker
    systemctl enable docker

    sudo apt-get install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

runcmd:
  - sh /home/ubuntu/bootstrap.sh

